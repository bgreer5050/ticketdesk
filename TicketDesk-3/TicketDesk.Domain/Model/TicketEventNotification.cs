using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace TicketDesk.Domain.Model
{
    public class TicketEventNotification
    {
        [Key]
        [Column(Order = 0)]
        [DisplayName("Ticket Id")]
        [Required]
        public int TicketId { get; set; }

        [Key]
        [Column(Order = 1)]
        [DisplayName("Comment Id")]
        [Required]
        public int CommentId { get; set; }

        [Key]
        [Column(Order = 2)]
        [DisplayName("Notify User")]
        [Required]
        [StringLength(100)]
        public string NotifyUser { get; set; }

        [DisplayName("Notify User Display Name")]
        [Required]
        [StringLength(100)]
        public string NotifyUserDisplayName { get; set; }

        [DisplayName("Notify Email")]
        [Required]
        [StringLength(255)]
        public string NotifyEmail { get; set; }

        [DisplayName("Notify User Reason")]
        [Required]
        [StringLength(50)]
        public string NotifyUserReason { get; set; }

        [DisplayName("Created Date")]
        [Required]
        public DateTimeOffset CreatedDate { get; set; }

        [DisplayName("Delivery Attempts")]
        [Required]
        public int DeliveryAttempts { get; set; }

        [DisplayName("Last Delivery Attempt Date")]
        public DateTimeOffset? LastDeliveryAttemptDate { get; set; }


        [DisplayName("Status")]
        [Required]
        [StringLength(20)]
        public string Status { get; set; }

        [DisplayName("Next Delivery Attempt Date")]
        public DateTimeOffset? NextDeliveryAttemptDate { get; set; }

        [DisplayName("Event Generated By User")]
        [Required]
        [StringLength(100)]
        public string EventGeneratedByUser { get; set; }

        public virtual TicketComment TicketComment { get; set; }

    }
}
