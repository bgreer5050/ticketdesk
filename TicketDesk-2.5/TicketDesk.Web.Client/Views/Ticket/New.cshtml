@using TicketDesk.Domain.Model
@model TicketDesk.Web.Client.Models.TicketCreateViewModel

@section title { New Ticekt }

@section scripts
{
    @Styles.Render("~/content/editor")
    @Scripts.Render("~/bundles/editor")
    @Scripts.Render("~/bundles/newticket")
    @Scripts.Render("~/bundles/markdown")
    <script type="text/javascript">

        (function () {
            var tdConfig = {
                dropzoneUploadUrl: "@Url.Action("Upload", "File")",
                pendingAttachmentsUrl: "@Url.Action("GetPendingAttachmentsInfo", "File")",
                defaultThumbnailUrl: "@Url.Content("~/content/images/general-file.png")",
                tagAutoCompleteUrl: "@Url.Action("TagList", "AutoComplete")"
            };
            window.newTicket.activate(tdConfig);
        })();
    </script>
}
<main>
    @using (Html.BeginForm("New", "Ticket", new { area = "" }, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="panel panel-info">
            <div class="panel-heading">
                <h2 class="panel-title">New Ticket</h2>
            </div>
            <div class="panel-body ">

                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                @Html.HiddenFor(model => model.Ticket.TicketId)
                @Html.HiddenFor(model => model.TempId, new { id = "tempId" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.Title, new { @class = "col-md-2 col-sm-1 control-label" })
                    <div class="col-md-8 col-sm-11">
                        @Html.TextBoxFor(model => model.Ticket.Title, new { @class = "form-control input-sm", placeholder = "Ticket title", tabindex = 1 })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.TicketType, new { @class = "col-md-2 col-sm-1 control-label" })
                    <div class="col-md-2 col-sm-3">
                        @Html.DropDownListFor(model => model.Ticket.TicketType, Model.Ticket.GetTicketTypeList(), new { @class = "form-control input-sm", tabindex = 2 })
                        @Html.ValidationMessageFor(model => model.Ticket.TicketType, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Ticket.Category, new { @class = "col-md-1 col-sm-1 control-label" })
                    <div class="col-md-2 col-sm-3">
                        @Html.DropDownListFor(model => model.Ticket.Category, Model.Ticket.GetCategoryList(), new { @class = "form-control input-sm", tabindex = 3 })
                        @Html.ValidationMessageFor(model => model.Ticket.Category, "", new { @class = "text-danger" })
                    </div>
                    @if (Model.DisplayPriorityList)
                    {
                        @Html.LabelFor(model => model.Ticket.Priority, new { @class = "col-md-1 col-sm-1 control-label" })
                        <div class="col-md-2 col-sm-3">
                            @Html.DropDownListFor(model => model.Ticket.Priority, Model.Ticket.GetPriorityList(), new { @class = "form-control input-sm", tabindex = 4 })
                            @Html.ValidationMessageFor(model => model.Ticket.Priority, "", new { @class = "text-danger" })
                        </div>
                    }
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.TagList, new { @class = "col-md-2 col-sm-1 control-label" })
                    <div class="col-md-4 col-sm-4">
                        @Html.TextBoxFor(m => m.Ticket.TagList, new { id = "ticketTags", @class = "form-control input-sm", tabindex = 5 })

                    </div>
                    <div class="col-md-3 col-md-offset-2 col-sm-5 col-sm-offset-2">
                        <label class="checkbox-inline" for="affectsCustomer">
                            <input class="" type="checkbox" id="affectsCustomer" data-bind="checked: affectsCustomer" tabindex="6" />
                            Affects Customer
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 col-sm-1 control-label text-right" for="wmd-input-ticketDetails">Details</label>
                    <div class="col-md-8 col-sm-11 wmd-panel">
                        <div class=" tabbable tabs-below">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="tab1">
                                    <div id="wmd-button-bar-ticketDetails" class="" style="display: inline-block"></div>
                                    @Html.TextAreaFor(model => model.Ticket.Details, new { id = "wmd-input-ticketDetails", @class = "wmd-input form-control", cols = "92", rows = "15", style = "height:200px", tabindex = 7 })

                                </div>
                                <div class="tab-pane fade" id="tab2">
                                    <div class="row" style="min-height: 35px;"></div>

                                    <div id="wmd-preview-ticketDetails" class="wmd-panel wmd-preview form-control">

                                    </div>
                                </div>
                            </div>
                            <ul class="nav nav-tabs navbar-right">
                                <li class="active"><a href="#tab1" data-toggle="tab"><i class="fa fa-edit"></i>&nbsp;Edit</a></li>
                                <li><a href="#tab2" data-toggle="tab"><i class="fa fa-eye"></i>&nbsp;Preview</a></li>
                            </ul>
                        </div>
                        @Html.ValidationMessageFor(model => model.Ticket.Details, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.DisplayUserSelects)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Ticket.Owner, new { @class = "col-md-2 col-sm-1 control-label" })
                        <div class="col-md-3 col-sm-5">
                            @Html.DropDownListFor(model => model.Ticket.Owner, Model.Ticket.GetOwnersList(), new { @class = "form-control input-sm", tabindex = 8 })
                            @Html.ValidationMessageFor(model => model.Ticket.Owner, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Ticket.AssignedTo, new { @class = "col-md-2 col-sm-2 control-label" })
                        <div class="col-md-3 col-sm-4">
                            @Html.DropDownListFor(model => model.Ticket.AssignedTo, Model.Ticket.GetAssignedToList(), new { @class = "form-control input-sm", tabindex = 9 })
                            @Html.ValidationMessageFor(model => model.Ticket.AssignedTo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    <label class="col-md-2 col-sm-1 control-label">Files</label>
                    <div class="col-md-8 col-sm-11">
                        <div class="dropzone" style="min-height: 60px;" id="attachmentsDropZone">
                            <span class="dz-message" data-dz-message><i class="fa fa-download fa-3x"></i> Drop attachments here, or click to select files.</span>
                        </div>
                    </div>
                </div>

            </div>
            <div class="panel-footer">
                <div class="col-md-offset-2 col-sm-offset-1">
                    <button type="submit" class="btn btn-success" tabindex="10">Create</button>&nbsp;&nbsp;
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    }
</main>