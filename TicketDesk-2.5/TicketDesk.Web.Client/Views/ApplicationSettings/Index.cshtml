@using TicketDesk.Web.Client.Models
@model TicketDesk.Domain.Model.ApplicationSetting

@section title
{
    Application Settings
}

@section scripts
{
    @Styles.Render("~/content/select2")
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/application-settings")

    <script type="text/javascript">

        (function () {
            window.applicationSettings.activate(null);
        })();
    </script>
}

<main>
    @using (Html.BeginForm("Index", "ApplicationSettings", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="panel panel-info">
            <div class="panel-heading">
                <h2 class="panel-title">Global Permissions</h2>
            </div>
            <div class="panel-body ">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.ApplicationName)

                <div class="form-group">
                    <div class="col-md-3 col-sm-offset-3 col-sm-5">
                        <label class="checkbox-inline">
                            @Html.CheckBoxFor(model => model.Permissions.AllowInternalUsersToEditPriority, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.DisplayNameFor(model => model.Permissions.AllowInternalUsersToEditPriority)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3 col-sm-offset-3 col-sm-5">
                        <label class="checkbox-inline">
                            @Html.CheckBoxFor(model => model.Permissions.AllowInternalUsersToEditTags, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.DisplayNameFor(model => model.Permissions.AllowInternalUsersToEditTags)
                        </label>
                    </div>
                </div>
            </div>
            <div class="panel-heading">
                <h2 class="panel-title">List Settings</h2>
            </div>
            <div class="panel-body ">
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectLists.TicketTypesList, new { @class = "col-md-3 col-sm-3 control-label" })
                    <div class="col-md-5 col-sm-7">
                        <input id="tickettypes" name="tickettypes" class="form-control input-sm" value="@Model.GetTicketTypes()" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectLists.CategoryList, new { @class = "col-md-3 col-sm-3 control-label" })
                    <div class="col-md-5 col-sm-7">
                        <input id="categories" name="categories" class="form-control input-sm" value="@Model.GetCategories()" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectLists.PriorityList, new { @class = "col-md-3 col-sm-3 control-label" })
                    <div class="col-md-5 col-sm-7">
                        <input id="priorities" name="priorities" class="form-control input-sm" value="@Model.GetPriorities()" />
                    </div>
                </div>


            </div>
            <div class="panel-heading">
                <h2 class="panel-title">Search Settings</h2>
            </div>
            <div class="panel-body ">
                <div class="form-group">
                    @Html.LabelFor(model => model.SearchSettings.SearchMode, new { @class = "col-md-3 col-sm-3 control-label" })
                    <div class="col-md-2 col-sm-3">
                        @Html.DropDownListFor(model => model.SearchSettings.SearchMode, Model.GetSearchModeList(), new { @class = "form-control input-sm", tabindex = 2 })
                    </div>
                    @{
                        //TODO: check current runtime config to see what auto detects, add warnings if manually setting to Azure and search configuration is invalid
                    }
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SearchSettings.SearchIndexName, new { @class = "col-md-3 col-sm-3 control-label" })
                    <div class="col-md-5 col-sm-7">
                        @Html.TextBoxFor(model => model.SearchSettings.SearchIndexName, new { @class = "form-control input-sm" })
                        <div class="small text-muted">
                            <p>If using a Local Lucene index, specify a folder name or a full path. Use a folder name to place the index under the /app_data folder on the web server. Use a full UNC or local path to place the index any other location. <br/>You can specify "ram" if you want to keep the index in memory (not recommended!)</p>
                            <p>For Azure Search, please follow the index naming guidelines as specified in the <a href="https://msdn.microsoft.com/en-us/library/azure/dn857353.aspx">Azure Search Documentation here.</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="">
                    <button type="submit" class="btn btn-success" tabindex="10">Save</button>&nbsp;&nbsp;

                </div>
            </div>
        </div>
    }


</main>